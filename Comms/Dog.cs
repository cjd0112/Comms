// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Dog.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Dog.proto</summary>
public static partial class DogReflection {

  #region Descriptor
  /// <summary>File descriptor for Dog.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static DogReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CglEb2cucHJvdG8iIQoDRG9nEgwKBEJhcmsYASABKAkSDAoERmVldBgCIAEo",
          "CWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Dog), global::Dog.Parser, new[]{ "Bark", "Feet" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Dog : pb::IMessage<Dog> {
  private static readonly pb::MessageParser<Dog> _parser = new pb::MessageParser<Dog>(() => new Dog());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Dog> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DogReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Dog() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Dog(Dog other) : this() {
    bark_ = other.bark_;
    feet_ = other.feet_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Dog Clone() {
    return new Dog(this);
  }

  /// <summary>Field number for the "Bark" field.</summary>
  public const int BarkFieldNumber = 1;
  private string bark_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Bark {
    get { return bark_; }
    set {
      bark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Feet" field.</summary>
  public const int FeetFieldNumber = 2;
  private string feet_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Feet {
    get { return feet_; }
    set {
      feet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Dog);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Dog other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Bark != other.Bark) return false;
    if (Feet != other.Feet) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Bark.Length != 0) hash ^= Bark.GetHashCode();
    if (Feet.Length != 0) hash ^= Feet.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Bark.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Bark);
    }
    if (Feet.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Feet);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Bark.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Bark);
    }
    if (Feet.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Feet);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Dog other) {
    if (other == null) {
      return;
    }
    if (other.Bark.Length != 0) {
      Bark = other.Bark;
    }
    if (other.Feet.Length != 0) {
      Feet = other.Feet;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Bark = input.ReadString();
          break;
        }
        case 18: {
          Feet = input.ReadString();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
