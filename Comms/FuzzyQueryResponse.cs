// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FuzzyQueryResponse.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from FuzzyQueryResponse.proto</summary>
public static partial class FuzzyQueryResponseReflection {

  #region Descriptor
  /// <summary>File descriptor for FuzzyQueryResponse.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static FuzzyQueryResponseReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChhGdXp6eVF1ZXJ5UmVzcG9uc2UucHJvdG8iTgoYRnV6enlRdWVyeVJlc3Bv",
          "bnNlRGV0YWlsEhEKCUNhbmRpZGF0ZRgBIAEoCRIQCghQaHJhc2VJZBgCIAEo",
          "AxINCgVTY29yZRgDIAEoASJOChJGdXp6eVF1ZXJ5UmVzcG9uc2USDQoFUXVl",
          "cnkYASABKAkSKQoGRGV0YWlsGAIgAygLMhkuRnV6enlRdWVyeVJlc3BvbnNl",
          "RGV0YWlsYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::FuzzyQueryResponseDetail), global::FuzzyQueryResponseDetail.Parser, new[]{ "Candidate", "PhraseId", "Score" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FuzzyQueryResponse), global::FuzzyQueryResponse.Parser, new[]{ "Query", "Detail" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class FuzzyQueryResponseDetail : pb::IMessage<FuzzyQueryResponseDetail> {
  private static readonly pb::MessageParser<FuzzyQueryResponseDetail> _parser = new pb::MessageParser<FuzzyQueryResponseDetail>(() => new FuzzyQueryResponseDetail());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FuzzyQueryResponseDetail> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::FuzzyQueryResponseReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FuzzyQueryResponseDetail() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FuzzyQueryResponseDetail(FuzzyQueryResponseDetail other) : this() {
    candidate_ = other.candidate_;
    phraseId_ = other.phraseId_;
    score_ = other.score_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FuzzyQueryResponseDetail Clone() {
    return new FuzzyQueryResponseDetail(this);
  }

  /// <summary>Field number for the "Candidate" field.</summary>
  public const int CandidateFieldNumber = 1;
  private string candidate_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Candidate {
    get { return candidate_; }
    set {
      candidate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "PhraseId" field.</summary>
  public const int PhraseIdFieldNumber = 2;
  private long phraseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long PhraseId {
    get { return phraseId_; }
    set {
      phraseId_ = value;
    }
  }

  /// <summary>Field number for the "Score" field.</summary>
  public const int ScoreFieldNumber = 3;
  private double score_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Score {
    get { return score_; }
    set {
      score_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FuzzyQueryResponseDetail);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FuzzyQueryResponseDetail other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Candidate != other.Candidate) return false;
    if (PhraseId != other.PhraseId) return false;
    if (Score != other.Score) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Candidate.Length != 0) hash ^= Candidate.GetHashCode();
    if (PhraseId != 0L) hash ^= PhraseId.GetHashCode();
    if (Score != 0D) hash ^= Score.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Candidate.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Candidate);
    }
    if (PhraseId != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(PhraseId);
    }
    if (Score != 0D) {
      output.WriteRawTag(25);
      output.WriteDouble(Score);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Candidate.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Candidate);
    }
    if (PhraseId != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(PhraseId);
    }
    if (Score != 0D) {
      size += 1 + 8;
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FuzzyQueryResponseDetail other) {
    if (other == null) {
      return;
    }
    if (other.Candidate.Length != 0) {
      Candidate = other.Candidate;
    }
    if (other.PhraseId != 0L) {
      PhraseId = other.PhraseId;
    }
    if (other.Score != 0D) {
      Score = other.Score;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Candidate = input.ReadString();
          break;
        }
        case 16: {
          PhraseId = input.ReadInt64();
          break;
        }
        case 25: {
          Score = input.ReadDouble();
          break;
        }
      }
    }
  }

}

public sealed partial class FuzzyQueryResponse : pb::IMessage<FuzzyQueryResponse> {
  private static readonly pb::MessageParser<FuzzyQueryResponse> _parser = new pb::MessageParser<FuzzyQueryResponse>(() => new FuzzyQueryResponse());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FuzzyQueryResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::FuzzyQueryResponseReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FuzzyQueryResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FuzzyQueryResponse(FuzzyQueryResponse other) : this() {
    query_ = other.query_;
    detail_ = other.detail_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FuzzyQueryResponse Clone() {
    return new FuzzyQueryResponse(this);
  }

  /// <summary>Field number for the "Query" field.</summary>
  public const int QueryFieldNumber = 1;
  private string query_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Query {
    get { return query_; }
    set {
      query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Detail" field.</summary>
  public const int DetailFieldNumber = 2;
  private static readonly pb::FieldCodec<global::FuzzyQueryResponseDetail> _repeated_detail_codec
      = pb::FieldCodec.ForMessage(18, global::FuzzyQueryResponseDetail.Parser);
  private readonly pbc::RepeatedField<global::FuzzyQueryResponseDetail> detail_ = new pbc::RepeatedField<global::FuzzyQueryResponseDetail>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::FuzzyQueryResponseDetail> Detail {
    get { return detail_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FuzzyQueryResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FuzzyQueryResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Query != other.Query) return false;
    if(!detail_.Equals(other.detail_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Query.Length != 0) hash ^= Query.GetHashCode();
    hash ^= detail_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Query.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Query);
    }
    detail_.WriteTo(output, _repeated_detail_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Query.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
    }
    size += detail_.CalculateSize(_repeated_detail_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FuzzyQueryResponse other) {
    if (other == null) {
      return;
    }
    if (other.Query.Length != 0) {
      Query = other.Query;
    }
    detail_.Add(other.detail_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Query = input.ReadString();
          break;
        }
        case 18: {
          detail_.AddEntriesFrom(input, _repeated_detail_codec);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
